<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Users extends MY_Controller {

    protected $is_login;
    public $user_name;
    protected $user_id;
    protected $is_admin;

    protected $user_pass;
    protected $moderate;



//the table name
//edit on Thu 8 Jun 2017
    protected $_tb_user = "users";
    protected $_tb_notice = "tbl_notification";

    public $o_put;
    public $msg;
    public $today;
    
    public $ip;

  function __construct() {
    parent::__construct();
    $this->load->model("Mdl_users");
    $this->load->model("Mdl_article");
    $this->load->model("Mdl_contact");
    //check the user session
    $this->is_login = $this->session->userdata("is_login");
    $this->user_name = $this->session->userdata("user_name");
    $this->user_id = $this->session->userdata("user_id");
    $this->is_admin = $this->session->userdata("is_admin");
    $this->user_pass = $this->session->userdata("user_pass");
    $this->moderate = $this->session->userdata("moderate");
    $this->u_data = $this->get_user_info();

    $this->ip = $this->Mdl_users->getIP();

}

function index(){

    //if the user enter this page
    //the script will check the session

    //$command = $this->input->post("command");

    /*
    if($this->is_login == 1):
        redirect(site_url("users/profile/{$this->user_id}"));
      else:
        //redirect to register page
        redirect(site_url("users/signup"));
    endif;

    */
    $url = site_url("users/logout");
    if($this->is_login):
        $url = site_url("users/summary");
        if($this->is_admin):
            $url = site_url("admin");
        endif;
    endif;
    redirect($url);

}//end of index

function signup(){

    $cmd = $this->input->post("cmd");
    $reg_name = $this->input->post("reg_name",true);
    $reg_pass = $this->make_hash($this->input->post("reg_pass"));
    $reg_email = $this->input->post("reg_email",true);
    $reg_ip = $this->input->post("reg_ip");

    $site_name = site_url();
    $tmp_u = "<div class='alert alert-info'>
        <h2>Dear {$reg_name} welcome to {$site_name}</h2>

        <p>
        You can change this message by 'Delete'
        this message in the below textbox and change
        it to what you like.
        </p>

        </div>";

    $today = date("Y-m-d",time());

    //prepare user detail
    $u_data = array();
    $u_data["name"] = $reg_name;
    $u_data["passwd"] = $reg_pass;
    $u_data["email"] = $reg_email;
    $u_data["user_ip"] = $reg_ip;
    $u_data["user_type"] = 409;
    $u_data["about_user"] = $tmp_u;

    //date of record
    $u_data["date_register"] = $today;


    $msg = "";
    $err = 0;
    $regis = 0;
    switch($cmd):
        case"chk_name":
            $ch_name = $this->_chk_name($reg_name);
            $this->o_put["err"] = $ch_name["err"];
            $this->o_put["msg"] = $ch_name["msg"];
            $this->output->set_output(json_encode($this->o_put));
        break;
        case"chk_email":


            if(!$this->is_valid_email($reg_email)):
                $msg = "Error : your email {$reg_email} is invalid";
                $err = 1;
            endif;

            if($this->_repeat_email($reg_email) == true):
                $msg = "Error : the email {$reg_email} is already exited!";
                $err = 1;
            endif;
           if($err != 1):
                $msg = "The email {$reg_email} is okay";
           endif;
            $this->o_put["err"] = $err;
            $this->o_put["msg"] = $msg;

            $this->output->set_output(json_encode($this->o_put));
        break;
        case"regis_user":
           $msg = 0;
           //$btnReg = "test";

           if($this->_repeat_name($reg_name)):
                $msg = "Error : this user name has taken!";
                $err = 1;
            elseif($this->_repeat_email($reg_email)):
                $msg = "Error : this email has taken!";
                $err = 1;
            else:
                //everything is fine now we can add new user
                $regis = $this->Mdl_users->saveUser($u_data);

                //--after create the new user then sent the notification to Admin
                $ip = $this->Mdl_users->getIP();
                $os = $this->Mdl_users->getOS();
                $browser = $this->Mdl_users->getBrowser();
                $note_title = "New register from {$ip} on {$today}";
                $note_body = "New Register from user {$reg_name} E-Mail {$reg_email} on {$today}  IP {$ip} OS {$os} {$browser}";
                $note_data = array(
                  "notice_title" => $note_title,
                  "notice_body" => $note_body,
                  "by_user_name" => $reg_name,
                  "notice_ip" => $ip
                );
                $this->Mdl_users->saveTB($this->_tb_notice,$note_data);

                //--End of sent notification


                $showM = "
                <div class='alert alert-success'>
                  <p>Your account has been created</p>
                  <p>สร้างบัญชีของคุณสำเร็จ! ยินดีต้อนรับ</p>
                </div>
                <div class='alert alert-warning'>
                <h2>This is NOT an automatic system!</h2>
                <p>
                Please Note : you cannot login to your
                account just now please wait 24 hour.
                </p>
                <p>
                ต้องกราบขออภัยด้วยครับ นี่ไม่ใช่ระบบอัตโนมัติ คุณจำเป็นต้องรอ 24 ชั่วโมงถึงจะสามารถเข้าใช้งานบัญชีของคุณได้
                </p>
                <p>This page will be refresh in 5 second!</p>
                </div>
                ";
                $msg =  $showM;
                $err = 0;

           endif;


           $this->o_put["msg"] = $msg;
           $this->o_put["error"] = $err;
           $this->output->set_output(json_encode($this->o_put));
        break;
        default:
            $this->data["subview"] = "users/frm_register";
            $this->load->view("_layout_main",$this->data);
        break;
    endswitch;

}//

    function ajaxGetUser(){
        $name = $this->input->post("fb_name");
        $email = $this->input->post("fb_email");

        $today = date("Y-m-d",time());
        $where = array("name" => $name,"email" => $email);
        $get = $this->Mdl_users->getUsers($where)->result();
        $num_u = count($get);
        $u_info = array();
        $u_id = 0;

        if($num_u == 0){
            $pass = $this->make_hash(1234);
            
            $user_data = array(
                "name" => $name,
                "email" => $email,
                "passwd" => $pass,
                "user_ip" => $this->ip,
                "date_register" => $today,
                "is_activated" => 1,
                "user_type" => 409
            );
            $s = $this->Mdl_users->saveUser($user_data);
            $u_id = $s;
            
        }else{
            foreach($get as $row){
                $u_id = $row->id;
            }
        }
        $t = $this->_user_type($u_id);
        $url = $t["url"];
        $this->_user_set_info($u_id);

        $this->o_put["msg"] = "logging in welcome {$name}";
        $this->o_put["url"] = $url;
        $this->output->set_output(json_encode($this->o_put));
        
        //redirect(site_url("users/summary"));
        
    }

/*
This is the private method section
Create on Sun 17 Dec 2017

*/
function _chk_name($name){
    //call by method signup
    //--last edit on 20/4/2018 auto save
    $err = 0;
    $msg = "";
    $get = $this->Mdl_users->getUsers(array("name" => $name))->result();
    $num = count($get);
    if($num >= 1):
        $msg = "Error : The user name {$name} is already taken!";
        $err = 1;
    endif;

    $data = array(
        "msg" => $msg,
        "err" => $err
    );
    return $data;

}
//------------
function _repeat_name($name){
    $get = $this->Mdl_users->getUsers(array("name" => $name))->result();
    $num = count($get);
    if($num != 0):
        return true;
    endif;
    return false;
}
//-------------------


//-------------------
function _repeat_email($email){
    //$em = $this->input->post("reg_email");
    $where = array("email" => $email);
    $get = $this->Mdl_users->getUsers($where)->result();
    if(count($get) != 0):
        return true;
    endif;
    return false;
}
//----
function _user_status($name,$pass){

    $data = array();
    $get = $this->Mdl_users->getUsers(array("name" => $name,"passwd" => $pass))->result();
    $msg = "Welcome {$name}";
    $err = 0;
    $num = count($get);
    $id = 0;
    if($num == 0):
        $msg = "Error : wrong user name or pass";
        $err = 1;
    endif;
    foreach($get as $row):
        if($row->is_activated == 0):
            $msg = "Error : your account is NOT active by admin";
            $err = 1;
        endif;
        if($row->is_ban != 0):
            $msg = "Error : your account is BAN";
            $err = 1;
        endif;
        $id = $row->id;
        $name = $row->name;
        $email = $row->email;

    endforeach;
    $data["msg"] = $msg;
    $data["err"] = $err;
    $data["u_id"] = $id;

    return $data;
}
//---get user status sat/14/apr/2018
function _user_type($u_id){
    $get = $this->Mdl_users->getUsers(array("id" => $u_id))->result();
    $url = site_url("users/login");//default will be member
    $data = array();
    $type = "anonymous";
    $mod = 0;
    foreach($get as $row):
        if($row->user_type == 642):
            $url = site_url("admin");
            $type = "admin";
        elseif($row->user_type == 409):
            $url = site_url("users/summary");
            $type = "member";
        endif;
    endforeach;
    $data["url"] = $url;
    $data["type"] = $type;
    return $data;
}
//--set user info tue 17 apr 2018
function _user_set_info($u_id){
    $is_login = 0;
    $id = 0;
    $u_name = 0;
    $u_email = 0;
    $type = 0;
    $u = array();
    $get = $this->Mdl_users->getUsers(array("id" => $u_id))->result();
    foreach($get as $row):
        $u["user_name"] = $row->name;
        $u["user_email"] = $row->email;
        $u["user_type"] = $row->user_type;
        $u["is_login"] = 1;
        $u["user_id"] = $row->id;
        $u["moderate"] = $row->moderate;
        if($row->user_type == 642):
            $u["is_admin"] = 1;
        endif;
    endforeach;

    $this->session->set_userdata($u);
    return $u;
}



/*
    End of private method

*/
/*
    confirm the password before process
*/
function conf_pass(){
    $pass = $this->make_hash($this->input->post("passwd"));
    $where = array("passwd" => $pass);
    $get = $this->Mdl_users->getUsers($where)->result();
    $num = count($get);
    $err = 1;
    $msg = "Error : wrong password! please re-check your confirm password!";
    if($num != 0):
        $err = 0;
        $msg = "PASS";
    endif;
    $this->o_put["err"] = $err;
    $this->o_put["msg"] = $msg;
    $this->output->set_output(json_encode($this->o_put));

}
//-----------
function forgotpass(){
    //only get by the ajax
    //--last edit on 18 Apr 2018
    $cmd = $this->input->post("cmd");
    $tel = $this->input->post("tel",true);
    $email = $this->input->post("email",true);
    $reP = $this->make_hash($this->input->post("newP",true));
    $u_id = $this->input->post("u_id");



    $err = 0;
    $msg = "";
    switch($cmd):
        case"chk_email":
            if(!$this->is_valid_email($email)):
                $err = 1;
                $msg = "Error : email is invalid!";
            else:
                $where = array("email" => $email);
                $get = $this->Mdl_users->getUsers($where)->result();
                $num = count($get);
                if($num != 1):
                    $err = 1;
                    $msg = "Error : there is none of account match found!";

                endif;

            endif;
            
            $this->o_put["err"] = $err;
            $this->o_put["msg"] = $msg;
            $this->output->set_output(json_encode($this->o_put));
        break;
        case"chk_tel":
            $where = array(
                "email" => $email,
                "tel" => $tel
            );
            $get = $this->Mdl_users->getUsers($where)->result();
            $num = count($get);
            if($num == 0):
                $err = 1;
                $msg = "Error : the user is not found";
            endif;
            if($err != 1):
                $msg = "PASS";
            endif;
            $this->o_put["err"] = $err;
            $this->o_put["msg"] = $msg;
            $this->output->set_output(json_encode($this->o_put));
        break;
        case"set_user":

            $where = array(
                "email" => $email,
                "tel" => $tel
            );
            $get = $this->Mdl_users->getUsers($where)->result();
            $num = count($get);
            if($num == 0):
                $err = 1;
                $msg = "Error : wrong information!";
            endif;
            $this->o_put["get"] = $get;
            $this->o_put['msg'] = $msg;
            $this->o_put["err"] = $err;
            $this->output->set_output(json_encode($this->o_put));

        break;
        case"resetMyPass":
        /*
        //|--when the user request to reset the password
        //|--and the reset was success will sent the message to the admin too
        //|--the user will not be able to use the new pass-code unless the admin
        //|--give it a permission to this user
        */
            $u_data = array(
                "passwd" => $reP,
                "is_activated" => 0
            );
            $save = $this->Mdl_users->saveUser($u_data,array("id" => $u_id));
            $msg = "Success : your password has been reset ,please come back and try to login again in 48 hours.";
            $this->o_put["msg"] = $msg;
            $this->output->set_output(json_encode($this->o_put));
        break;
    endswitch;
}



function login(){
    //require("login_user.php");
    //--comment out as update to new code
    //--on Fri 13 Apr 2018
    $cmd = $this->input->post("cmd");
    $u_name = $this->input->post("u_name",true);
    $u_pass = $this->input->post("u_pass",true);
    $pass = $this->make_hash($u_pass);
    $ip = $this->data["ip"];
    $this->today = date("Y-m-d h:i:s",time());

    //$count = 1;//--count how many time this ip try to login

    //$msg = "";
    $err = 0;
    switch($cmd):
        
        case"chk_user":
        //--login and get info from the user
        //--redirect them into the page
        //--get user data on login
            $data = $this->_user_status($u_name,$pass);
            $url = "";
            if($data["err"] == 1):
                $url = site_url("users/login");
            else:
                // $type = $this->_user_type($data["u_id"]);
                // $url = $type["url"];
                // $u = $this->_user_set_info($data["u_id"]);
            endif;
            //--user type



            $this->o_put["url"] = $url;
            $this->o_put["msg"] = $data["msg"];
            $this->o_put["error"] = $data["err"];
            $this->output->set_output(json_encode($this->o_put));
        break;
        case"login":
            $data = $this->_user_status($u_name,$pass);
            $url = "";
            if($data["err"] == 1):
                $url = site_url("users/login");
            else:
                $type = $this->_user_type($data["u_id"]);
                $url = $type["url"];
                $u = $this->_user_set_info($data["u_id"]);
            endif;
        //--user type



        $this->o_put["url"] = $url;
        $this->o_put["msg"] = $data["msg"];
        $this->o_put["error"] = $data["err"];
        $this->output->set_output(json_encode($this->o_put));

            //--user has login sent notice to admin
            // $note_title = "New Login from {$ip} name {$u_name}";
            // $note_body = "The user name {$u_name} has login using IP {$ip} on {$this->today}.";
            // $notice_data = array(
            //     "notice_title" => $note_title,
            //     "notice_body" => $note_body,
            //     "notice_ip" => $ip,
            //     "by_user_name" => $u_name
            // );
            // $this->Mdl_users->saveTB($this->_tb_notice,$notice_data);
            //----
        break;
        default:
            $this->data["meta_title"] = "User login form";
            $this->data["subview"] = "users/frm_login";
            $this->load->view("_layout_main",$this->data);
        break;
    endswitch;

}
//----
/*
//--member landing page 
//--after member login will be redirect to this page
//--create on Sun 22/4/2018
*/
function summary(){
    if(!$this->is_login):
        //--no session is_login will be redirect 
        $this->logout();
    endif;
    $all_ar = array("ar_user_id" => $this->user_id);
    $get_all_ar = $this->Mdl_article->getArticle($all_ar)->result();
    $num_all_ar = count($get_all_ar);
    $this->data["num_all_ar"] = $num_all_ar;

    //echo"hello {$this->user_name}";

    $this->data["meta_title"] = "{$this->user_name}'s summary";
    $subview = "users/member_summary";
    $layout = "_layout_main";
    if($this->moderate == 1):
        $subview = "users/member_mod";
        $layout = "_layout_moderate";
        
    else:
        $this->data["subview"] = $subview;
        $layout = "_layout_main";
        //$this->load->view("_layout_main",$this->data);
    endif;
    $this->data["subview"] = $subview;
    $this->load->view($layout,$this->data);
}
//----
//----------
function ajaxArSum(){
    //--this method will call from ajaxUserSummary
    //--to get the data about the article that user have made
    //---Thu 26/4/2018
    
    $data = array();

    $all_ar = $this->Mdl_article->getArticle(array("ar_user_id" => $this->user_id))->result();
        $data["num_all_ar"] = count($all_ar);


        $ar_pub = $this->Mdl_article->getArticle(array(
            "ar_show_public !=" => 0,
            "ar_user_id" => $this->user_id))->result();
        $data["num_pub_ar"] = count($ar_pub);

        $ar_pri = $this->Mdl_article->getArticle(array(
            "ar_show_public " => 0,
            "ar_user_id" => $this->user_id))->result();
        $data["num_pri_ar"] = count($ar_pri);

        $no_approve = $this->Mdl_article->getArticle(array(
            "ar_user_id "=>$this->user_id,
            "ar_is_approve " => 0
        ))->result();
        $data["not_approve"] = count($no_approve);

        $approve = $this->Mdl_article->getArticle(array(
            "ar_user_id "=>$this->user_id,
            "ar_is_approve !=" => 0
        ))->result();
        $data["approve"] = count($approve);

        return $data;
}

//---ajaxMessageSum
function ajaxMessageSum(){
    //---call by ajaxUserSummary
    //--will return array to the other for ajax
    $data = array();

    //--get all faq
    $all_faq = $this->Mdl_contact->getFaq(
        array(
            "faq_user_id " => $this->user_id
            ))->result();
    $data["all_faq"] = count($all_faq);
    
    //--no reply
    $not_reply = $this->Mdl_contact->getFaq(array(
        "faq_user_id" => $this->user_id,
        "faq_has_ans " => 0
    ))->result();
    $data["no_reply"] = count($not_reply);

    $reply = $this->Mdl_contact->getFaq(array(
        "faq_user_id" => $this->user_id,
        "faq_has_ans !=" => 0
    ))->result();
    $data["has_reply"] = count($reply);

    return $data;
}


//-------
//---Thu 26 apr 2018
function ajaxUserSummary(){
    //--this method is only call by ajax
    //--will show article,booking,faq
    //--on member landing page
    $u_id = $this->input->post("user_id");
    
    if($this->user_id == $u_id):
        
        $get_ar = $this->ajaxArSum();
        $this->o_put["get_ar"] = $get_ar;
        
        $get_faq = $this->ajaxMessageSum();
        $this->o_put["get_faq"] = $get_faq;
        
           
        else:
            $this->o_put["err"] = "something went wrong!";
    
    endif;

    $this->output->set_output(json_encode($this->o_put));
    
}

//---End of member landing page
//---

function profile(){

    //require("profile_user.php");
    if(!$this->user_id || !$this->is_login):
        $this->logout();
    endif;
    $cmd = $this->input->post("cmd");
    $u_id = $this->user_id;
    $u_name = $this->input->post("u_name",true);
    $u_email = $this->input->post("u_email",true);
    $about_user = $this->input->post("about_user",true);
    $u_tel = $this->input->post("u_tel",true);
    $u_pass = $this->make_hash($this->input->post("nPass",true));


    $err = 0;
    $msg = "";

    $today = date("Y-m-d",time());

    $u_data = array(
        "name" => $u_name,
        "email" => $u_email,
        "tel" => $u_tel,
        "passwd" => $u_pass,
        "about_user" => $about_user,
        "last_update" => $today
    );


    switch($cmd):
        case"get_user":
            //get the user info and put in the profile form
            $where = array("id" => $this->user_id);
            $get = $this->Mdl_users->getUsers($where)->result();
            $this->o_put["get"] = $get;
            $this->output->set_output(json_encode($this->o_put));
        break;
        case"profile_save":
            if(!$u_pass):
                unset($u_data["passwd"]);
            endif;
            $save = $this->Mdl_users->saveUser($u_data,array("id" => $u_id));
            $this->o_put["msg"] = "Success";
            $this->output->set_output(json_encode($this->o_put));
        break;
        default:
            //$this->data["u_id"] = $this->user_id;
            $this->data["subview"] = "users/frm_user_profile";
            $this->load->view("_layout_main",$this->data);
        break;
    endswitch;
}//end of profile user




//no need to edit
function logout(){

    $user_data = array("user_name","user_id","is_login","is_admin");
    $this->session->unset_userdata($user_data);
    $this->session->sess_destroy();
    redirect(site_url("users/login"));
}
////End of mon-12-Sep-2016


/*
*|admin section create on Wed 27 Dec 2017
*| just today
*/
    function admin(){
        //--admin will add,edit or delete user
        $this->load->library("pagination");
        $cmd = $this->input->post("cmd");
        $u_id = $this->input->post("u_id");
        $u_name = $this->input->post("u_name");
        $u_email = $this->input->post("u_email");
        $u_active = $this->input->post("u_active");
        //$u_mod = $this->input->post("u_mod");
        $today = date("Y-m-d",time());
        $about_user = "<div class='alert alert-danger'><h2>Dear {$u_name} </h2>
        <p>Your account is create by Admin </p>
        <p>Your default password is using 1234 </p>
        <p>Your password is insecure</p>
        <h2>please note </h2>
        <p>You have to change your password once you have login to your account
        for your safety purpose</p>
        <pre>
            รหัสผ่านของคุณคือ 1234 และมันไม่ปลอดภัย กรุณาเปลี่ยนเสียด้วย
        </pre>
        </div>
        ";
        $u_ban = $this->input->post("u_ban");
        if(!$u_ban):
            $u_ban = 0;
        endif;
        if(!$u_active):
            $u_active = 0;
        endif;
        
        $u_mod = ($u_mod = $this->input->post("u_mod"))?$u_mod = 1:$u_mod=0;
        $u_data = array(
            "name" => $u_name,
            "passwd" => $this->make_hash("1234"),
            "email" => $u_email,
            "about_user" => $about_user,
            "is_activated" => $u_active,
            "is_ban" => $u_ban,
            "moderate" => $u_mod,
            "user_type" => 409,
            "date_register" => $today,
            "last_update" => $today
        );
        switch($cmd):
            case"edit_user":
                $get = $this->Mdl_users->getUsers(array("id" => $u_id))->result();
                $this->o_put["get"] = $get;
                $this->output->set_output(json_encode($this->o_put));
            break;
            case"save_user":
                $msg = "";
                $label = "Updated";
                if(!$u_id):
                    //--create new user
                    unset($u_data["last_update"]);
                    $label = "Created";
                    $save = $this->Mdl_users->saveUser($u_data);
                endif;
                $msg = "The account {$u_name} has been {$label}.";
                $this->o_put["msg"] = $msg;
                unset($u_data["date_register"]);
                unset($u_data["about_user"]);
                unset($u_data["passwd"]);
                $save = $this->Mdl_users->saveUser($u_data,array("id" => $u_id));
                $this->output->set_output(json_encode($this->o_put));
            break;
            case"del_user":
                $del = $this->Mdl_users->delUser(array("id" => $u_id));
                $this->o_put["msg"] = "The user {$u_id} has DELETED!";
                $this->output->set_output(json_encode($this->o_put));
            break;
            default:
                $get = $this->Mdl_users->getUsers(array("user_type !=" => 642))->result();
                $num_all = count($get);

                //--pagination
                $per_page = 10;
                $page = $this->input->get("page");
                if(!$page):
                    $page = $per_page;
                else:
                    $page = $page;
                endif;

                $conf = array(
                    "base_url" => site_url("users/admin/{$page}"),
                    "total_rows" => $num_all,
                    "per_page" => $per_page,
                    "full_tag_open" => "<ul class='pagination'><li>",
                    "full_tag_close" => "</li></ul>"
                );
                $this->pagination->initialize($conf);
                $get_all_user = $this->Mdl_users
                                    ->getUsers(
                                                array("user_type !=" => 642),
                                                $conf["per_page"],
                                                $this->uri->segment(4))
                                    ->result();
                $this->data["get_users"] = $get_all_user;
                $this->data["num_users"] = $num_all;
                $this->data["per_page"] = $per_page;

                $this->data["subview"] = "admin/user/user_index";
                $this->data["meta_title"] = "Manage user  from users section";

                $this->load->view("_layout_admin",$this->data);
            break;
        endswitch;

    }
/*End of admin section */

}//end of the class users
